# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Streamlit-Gosling Python Package to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 15.x, 16.x]
        python-version: ['3.7', '3.8', '3.9']
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm Build
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
          npm run build
        working-directory: streamlit_gosling/frontend
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build package
        run: python setup.py sdist bdist_wheel
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/
